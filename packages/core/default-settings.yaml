substitutions:
  #### SETTINGS
  debounce_time: 200ms
  delayed_off_time: 5s

esphome:
  project:
    name: $project_name
    version: $project_version
  on_boot:
    priority: 600.0
    then:
      - text_sensor.template.publish:
          id: device_id
          state: !lambda 'return get_mac_address();'
      - wait_until:
          api.connected:
      - logger.log: API is connected!
      - rtttl.play: $success_beep
      
# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

safe_mode:

logger:
  level: INFO

binary_sensor:
  - platform: status
    name: "Status"
    entity_category: diagnostic
  - platform: template
    name: "Low Memory Warning"
    lambda: |-
      return ESP.getFreeHeap() < 120000;
    entity_category: diagnostic
    device_class: problem
    
text_sensor:
  - platform: template
    name: "Device ID"
    id: device_id
    entity_category: diagnostic
    update_interval: never
  - platform: version
    hide_timestamp: true
    name: "ESPHome Version"
    entity_category: diagnostic
  - platform: debug
    device:
      name: "Device Info"
      entity_category: diagnostic
    reset_reason:
      name: "Reset Reason"
      entity_category: diagnostic

sensor:
  - platform: debug
    loop_time:
      name: "Loop Time"
    cpu_frequency:
      name: "CPU Frequency"

button:
  - platform: restart
    name: "Restart"
    entity_category: config
  - platform: safe_mode
    name: "Restart (Safe Mode)"
    entity_category: config

  #### STATUS LED
globals:
  - id: blink_on_state
    type: bool
    restore_value: no
    initial_value: "true"

switch:
  - platform: template
    name: "Blink On State Status"
    restore_mode: ALWAYS_ON
    lambda: |-
      return id(blink_on_state);
    turn_on_action:
      - lambda: |-
          id(blink_on_state) = true;
    turn_off_action:
      - lambda: |-
          id(blink_on_state) = false;
          
light:
  - platform: status_led
    name: "Status LED Light"
    id: status_led_light
    pin:
      number: $status_led_1
      inverted: $invert_status_led

script:
  - id: blink_status_led
    then:
      - if:
          condition:
            lambda: return id(blink_on_state);
          then:
            - light.toggle: status_led_light
            - delay: 100ms
            - light.toggle: status_led_light

packages:
  remote_package:
    url: http://github.com/deep126/esphome
    ref: master
    refresh: 5min
    files: 
      - packages/core/connectivity.yaml
      - packages/core/buzzer.yaml
